name: Build and Deploy to EC2

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]

jobs:
  build:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
        
    - name: Install dependencies
      run: npm ci
      
    - name: Build project
      run: npm run build
      
    - name: Upload build artifacts
      uses: actions/upload-artifact@v4
      with:
        name: build-files
        path: dist/
      if: success()

  deploy:
    needs: build
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main' || github.ref == 'refs/heads/master'
    
    steps:
    - name: Deploy to EC2
      uses: appleboy/ssh-action@v1.0.3
      with:
        host: ${{ secrets.EC2_HOST }}
        username: ${{ secrets.EC2_USERNAME }}
        key: ${{ secrets.EC2_SSH_KEY }}
        port: 22
        script: |
          # Check if Node.js is installed
          if ! command -v node &> /dev/null; then
            echo "Node.js not found. Installing Node.js..."
            curl -fsSL https://deb.nodesource.com/setup_18.x | sudo -E bash -
            sudo apt-get install -y nodejs
          fi
          
          # Check if PM2 is installed
          if ! command -v pm2 &> /dev/null; then
            echo "PM2 not found. Installing PM2..."
            sudo npm install -g pm2
          fi
          
          cd Portfolio
          
          # Configure git to handle divergent branches
          git config pull.rebase false
          
          # Check which branch exists and pull from it
          if git ls-remote --heads origin main | grep -q main; then
            git pull origin main
          elif git ls-remote --heads origin master | grep -q master; then
            git pull origin master
          else
            echo "Error: Neither main nor master branch found"
            exit 1
          fi
          
          npm ci
          npm run build
          pm2 stop portfolio
          pm2 delete portfolio
          pm2 start npm --name "portfolio" -- start
          echo "Deployment completed successfully!" 